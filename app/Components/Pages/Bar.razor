@page "/"
@using app.Domain
@rendermode InteractiveServer
@inject AbartDbContext AbartDbContext

<PageTitle>Oan den tuug</PageTitle>
@if (Products == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        @foreach (var product in Products)
        {
            <div class="col-md-6 mb-2">
                <button class="col-md-12 btn btn-primary" @onclick="@(() => UpdateTransaction(product))">
                    <div class="row">
                        <svg class="col-lg-2"style="width: 100px">
                            <use href="bootstrap-icons/bootstrap-icons.svg#arrow-down-circle-fill"></use>
                        </svg>
                        <div class="col-lg-7">
                            @product.Name
                            @(Transaction.Orders.FirstOrDefault(o => o.Product.Id == product.Id)?.Quantity)
                        </div>
                        <svg class="col-lg-2" style="width:100px">
                            <use href="bootstrap-icons/bootstrap-icons.svg#arrow-up-circle-fill"></use>
                        </svg>
                    </div>
                </button>
            </div>
        }
    </div>
    <div class="row">
        <button class="col-md-12 btn btn-lg btn-success" @onclick="AddTransaction">Afrekenen (Totaal = @Transaction.Total.ToString("F2"))</button>
    </div>
}

@code {
    private List<Product> Products;
    private Transaction Transaction;

    protected override async Task OnInitializedAsync()
    {
        Products = AbartDbContext.Products.ToList();
        InitTransaction();
    }

    private void InitTransaction()
    {
        Transaction = new Transaction()
            {
                Seller = new Person()
                {
                    Email = "maarten.demuynck@gmail.com",
                    Name = "Maarten De Muynck",
                    Group = "Afsprong"
                },
                Orders = new List<Order>()
            };
    }

    private void UpdateTransaction(Product product)
    {
        var order = Transaction.Orders.FirstOrDefault(o => o.Product.Id == product.Id);
        if (order == null)
        {
            order = new Order { Product = product, Quantity = 1 };
            Transaction.Orders.Add(order);
        }
        else
        {
            order.Quantity++;
        }
        Transaction.Total += product.UnitPrice;
    }

    private async Task AddTransaction()
    {
        AbartDbContext.Transactions.Add(Transaction);
        await AbartDbContext.SaveChangesAsync();
        InitTransaction();
    }

}